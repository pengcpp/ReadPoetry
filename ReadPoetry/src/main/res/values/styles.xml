<resources>


    <style name="NoTitleActivityStyle" parent="@style/AppTheme">
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="@android:windowAnimationStyle">@style/WindowAnimation.Default</item>
    </style>

    <!-- Base application theme. -->
    <style name="AppTheme.Base" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <!-- Actionbar color -->
        <item name="colorPrimary">@color/accent_material_dark</item>
        <!--Status bar color-->
        <item name="colorPrimaryDark">@color/accent_material_light</item>
        <!--Window color-->
        <item name="android:windowBackground">@color/dim_foreground_material_dark</item>
    </style>

    <!-- Mocked Account -->
    <style name="MockedAccountLight" parent="MaterialNavigationDrawerTheme.Light.DarkActionBar">
        <item name="colorPrimary">#8bc34a</item>
        <item name="colorPrimaryDark">#558b2f</item>
        <item name="colorAccent">#FFFFFF</item>
        <item name="singleAccount">true</item>
        <!-- Remove the change account button -->
    </style>

    <style name="ActivityAnimationIn" parent="@style/AppTheme.Base">
        <item name="android:windowIsTranslucent">true</item>
        <!--<item name="android:windowAnimationStyle">@style/Animation.Activity.Translucent.Style</item>-->
    </style>

    <style name="Animation.Activity.Translucent.Style" parent="@android:style/Animation.Translucent">
        <item name="android:windowEnterAnimation">@anim/activity_right_enter</item>
        <item name="android:windowExitAnimation">@anim/activity_left_exit</item>
    </style>

    <!-- 控制系统Activity跳转的默认动画 -->
    <style name="WindowAnimation.Default" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/activity_switch_style01_open_enter</item>
        <item name="android:activityOpenExitAnimation">@anim/activity_switch_style01_open_exit</item>
        <item name="android:activityCloseEnterAnimation">@anim/activity_switch_style01_close_enter</item>
        <item name="android:activityCloseExitAnimation">@anim/activity_switch_style01_close_exit</item>
    </style>

    <!-- View -->

    <style name="quora_result_rating_bar_style" parent="@android:style/Widget.RatingBar">
        <item name="android:progressDrawable">@drawable/quora_result_rating_bar</item>
        <item name="android:minHeight">12dp</item>
        <item name="android:maxHeight">12dp</item>
    </style>

    <!-- GridPasswordView -->
    <style name="GridPasswordView"/>

    <style name="GridPasswordView.TextView">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:background">@null</item>
        <item name="android:gravity">center</item>
        <item name="android:layout_weight">1</item>
        <item name="android:singleLine">true</item>
    </style>

    <style name="GridPasswordView.EditText" parent="GridPasswordView.TextView">
        <item name="android:cursorVisible">false</item>
    </style>

    <style name="GridPasswordView.Divider">
        <item name="android:layout_width">1dp</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:layout_marginTop">1dp</item>
        <item name="android:layout_marginBottom">1dp</item>
    </style>

    <!-- Refresh Layout -->
    <declare-styleable name="PtrFrameLayout">
        <!-- Optional. If you put header and content in xml, you can you these to specify them. -->
        <attr name="ptr_header" format="reference"/>
        <attr name="ptr_content" format="reference"/>
        <!-- the resistance when you are moving the frame -->
        <attr name="ptr_resistance" format="float"/>
        <!-- the ration of the height of the header to trigger refresh -->
        <attr name="ptr_ratio_of_header_height_to_refresh" format="float"/>
        <attr name="ptr_duration_to_close" format="integer"/>
        <attr name="ptr_duration_to_close_header" format="integer"/>
        <!-- pull to refresh, otherwise release to refresh, default is release to refresh -->
        <attr name="ptr_pull_to_fresh" format="boolean"/>
        <!-- keep header when refreshing-->
        <attr name="ptr_keep_header_when_refresh" format="boolean"/>
    </declare-styleable>

    <!-- Pager Indicator -->
    <style name="StyledIndicators" parent="AppTheme">
        <item name="android:windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="vpiTabPageIndicatorStyle">@style/CustomTabPageIndicator</item>
    </style>

    <style name="CustomTabPageIndicator" parent="Widget.TabPageIndicator">
        <item name="android:background">@drawable/custom_tab_indicator</item>
        <item name="android:textAppearance">@style/CustomTabPageIndicator.Text</item>
        <item name="android:textColor">@color/tab_color_selector</item>
        <item name="android:textSize">16sp</item>
        <item name="android:divider">@null</item>
        <item name="android:dividerPadding">10dp</item>
        <item name="android:showDividers">middle</item>
        <item name="android:paddingLeft">10dp</item>
        <item name="android:paddingRight">10dp</item>
        <item name="android:fadingEdge">horizontal</item>
        <item name="android:fadingEdgeLength">8dp</item>
    </style>

    <style name="CustomTabPageIndicator.Text" parent="android:TextAppearance.Medium">
        <item name="android:textColor">@color/vpi__dark_theme</item>
        <item name="android:typeface">monospace</item>
    </style>

</resources>
